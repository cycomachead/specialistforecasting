#!/usr/bin/perl

my $debug = 0;

# build.properties must be created before ant can be run
#

if ( -d "$ENV{HOME}/salesforce/build" ) {
    chdir "$ENV{HOME}/salesforce/build";
}

# load the default properties
#
my $defaultpropfile = "./default.properties";
open DEFAULTBUILDPROP, "$defaultpropfile" or die "Cannot open $defaultpropfile\n";
while (<DEFAULTBUILDPROP>) {
chomp;
   next if (/^#/);     # ignore comments
   s/^\s+//;           # ignore beginning white space
   s/\s+$//;           # ignore trailing white space
   next unless length;     # anything left? ignore blank lines
   my ($var, $value) = split(/\s*=\s*/, $_, 2);
   $ENV{$var} = $value;
}
close DEFAULTBUILDPROP;


if ( -f "./build.properties" ) {
    $propfile = "./build.properties";
} else {
    die "Missing build.properties. Copy build.properties.dev into build.properties and update it for your environment to continue.\n"
}

#
# common props
open BUILDPROP, "$propfile" or die "Cannot open $propfile\n";
while (<BUILDPROP>) {
    chomp;
    next if (/^#/);     # ignore comments
    s/^\s+//;           # ignore beginning white space
    s/\s+$//;           # ignore trailing white space
    next unless length;     # anything left? ignore blank lines
    my ($var, $value) = split(/\s*=\s*/, $_, 2);
    $ENV{$var} = $value;
}
close BUILDPROP;

# variable substitution for references
#
foreach $key (keys %ENV) {
    while ($ENV{$key} =~ /\${([^}]+)}/) {
	die "Undefined property \${$1} specified in build.properties, exiting\n" if ! exists $ENV{$1};
	$rep = $ENV{$1};
	$ENV{$key} =~ s/\${$1}/$rep/;
    }
    print "key: $key, value: $ENV{$key}\n" if ($debug);
}

# load local properties: user.properties
#
if ( -f "./user.properties" ) {
    $userpropfile = "./user.properties";
    open BUILDPROP, "$userpropfile" or die "Cannot open $userpropfile\n";
    while (<BUILDPROP>) {
    chomp;
       next if (/^#/);     # ignore comments
       s/^\s+//;           # ignore beginning white space
       s/\s+$//;           # ignore trailing white space
       next unless length;     # anything left? ignore blank lines
       my ($var, $value) = split(/\s*=\s*/, $_, 2);
       $ENV{$var} = $value;
     }
     close BUILDPROP;
}

# set delimiter according to platform
#
my $delim = ";";
if ("$^O" =~ m/linux|darwin|solaris/ ) {
  $delim = ":"; 
}

$ENV{EXT_DIRS} = "$ENV{JAVA_HOME}/lib" . "$delim" . "$ENV{ANT_HOME}/lib" . "$delim" . "$ENV{ANT_HOME}/lib/checkstyle";

print "ANT_HOME  = $ENV{ANT_HOME}\n" if $debug;
print "JAVA_HOME = $ENV{JAVA_HOME}\n" if $debug;
print "EXT_DIRS  = $ENV{EXT_DIRS}\n" if $debug;

if ( ! -d $ENV{JAVA_HOME} ) {
    die "Invalid or unspecified JAVA_HOME: $ENV{JAVA_HOME} in your environment or build.properties. Update build.properties from build.properties.dev and customize as necessary for your environment before continuing.\n"; 
}
if ( ! -d $ENV{ANT_HOME} ) {
    die "Invalid or unspecified ANT_HOME: $ENV{ANT_HOME} in your environment or build.properties. Update build.properties from build.properties.dev and customize as necessary for your environment before continuing.\n"; 
}

my $inp = join(" ", @ARGV);
print "Using ARGV = $inp\n" if $debug;

my $retval = system("$ENV{JAVA_HOME}/bin/java -Xmx512m -Djava.ext.dirs=$ENV{EXT_DIRS} org.apache.tools.ant.Main -emacs $inp");

if ( "$retval" ne "0" ) {
    exit 1;
} else {
    exit 0;
}
