<?xml version="1.0" encoding="UTF-8"?>
<project name="Specialist Forecasting Deploy" default="help" basedir="." xmlns:sf="antlib:com.salesforce">
    <description>
        A simplified build file for the Specialist Forecasting package Use ant help for more info.
    </description>

    <echo />
    <property file='build.properties'/>
    <property environment="env"/>

    <property name="build.dir" value="${basedir}"/>
    <property name="loader.dir" value="${loader.home}"/>
    <property name="loader.conf.dir" value="${loader.conf}"/>

    <property name="forecast.data.dir" value="${forecast.home}/data"/>
    <property name="forecast.data.mapping.dir" value="${forecast.home}/data/mappings"/>

    <property name="tools.dir" value="${tools.home}"/>

    <property name="testForecast.home" value="${tests.home}/forecast"/>

    <property name="testForecast.cls.dir" value="${testForecast.home}/src/classes/"/>
    <property name="testForecast.trg.dir" value="${testForecast.home}/src/triggers/"/>

    <property name="dealmaker.home" value="${managedapps.home}/dealmaker"/>

    <!-- custom task definitions -->
    <path id="loader.classpath">
        <pathelement location="${loader.dir}/DataLoader.jar"/>
        <pathelement location="${loader.dir}/classes"/>
    </path>

    <import file="${tools.dir}/build/tools.xml"/>

    <echo message="build dir: ${build.dir}"/>
    <echo message="Java Home: ${JAVA_HOME}"/>
    <echo message="Ant Home: ${ant.home}"/>
    <echo message="Connecting to: ${env.endpoint}"/>
    <echo />

    <echo message="forecastHome: ${forecast.home}"/>
    <echo message="testForecast.home: ${testForecast.home}"/>
    <echo />

    <taskdef name="deploy" classname="com.salesforce.ant.DeployTask" classpath="${tools.home}/java/ext/ant-salesforce.jar"/>
    <tstamp>
        <format property="tempDateTimePattern" pattern="MM_dd_yyyy_hh_mm_aa"/>
    </tstamp>

    <property name="forecastSFDC.dir" value="${forecast.home}/src"/>

    <target name="deployForecastSFDC" description="Puts the components from forecast sfdc source dir.">
        <echo message="username: ${sfdc.login}"/>
        <echo message="Deploying 62 Org Code from: ${forecastSFDC.dir}"/>
        <deploy username="${sfdc.login}"
                password="${sfdc.password}"
                serverurl="${env.endpoint}"
                deployroot="${forecastSFDC.dir}"
                maxPoll="1000" pollWaitMillis="100000">
        </deploy>
    </target>

    <property name="testForecast.dir" value="${testForecast.home}/src"/>
    <target name="deployTestForecast" description="Puts the components from test/forecast source dir.">
        <echo message="username: ${sfdc.login}"/>
        <echo message="Deploying 62 Org Code from: ${testForecast.dir}"/>
        <deploy username="${sfdc.login}"
                password="${sfdc.password}"
                serverurl="${env.endpoint}"
                deployroot="${testForecast.dir}"
                maxPoll="1000" pollWaitMillis="100000">
        </deploy>
    </target>

    <target name="apexRunTestsCheckCoverageTarget">
        <if>
            <equals arg1="${codecoverage}" arg2="true" />
            <then>
                <antcall target="apexRunTestsWithCodeCov"/>
            </then>
            <else>
                <antcall target="apexRunTestsWithoutCodeCov"/>
            </else>
        </if>
    </target>

    <target name="apexRunTestsWithoutCodeCov">
        <if>
            <equals arg1="${noargs}" arg2="true" />
            <then>
            <apexRunTests user="${orguser.login}" password="${orguser.password}"  xmlResults="${xml.results}"
                server="${env.endpoint}"  />
            </then>
            <else>
            <apexRunTests user="${orguser.login}" password="${orguser.password}"  xmlResults="${xml.results}"
                server="${env.endpoint}" extraArgs="${extraArgsVal}"  />
            </else>
        </if>
    </target>

    <target name="apexRunTestsWithCodeCov">
        <echo message="value of folderForDataFiles is ${folderForDataFiles}"/>
        <echo message="value of folderForFinalResults is ${folderForFinalResults}" />

        <fail unless="folderForDataFiles" message="Folder name for data files not set. Please set and retry"/>
        <fail unless="folderForFinalResults" message="Folder name for results files not set. Please set and retry"/>
        <tstamp>
            <format property="tempDateTimePattern" pattern="MM_dd_yyyy_hh_mm_aa"/>
        </tstamp>
        <var name="folderForDataFilesVal" value="${folderForDataFiles}/run_${tempDateTimePattern}"/>
        <var name="finalResultsFileNameVal" value="${result.dir}/results/${finalCoverageResultsXML}"/>
        <var name="htmlFileNameVal" value="${result.dir}/results/${finalCoverageResultsHTML}"/>

        <mkdir dir="${folderForDataFilesVal}"/>
        <copy file="${folderForFinalResults}/results.xsl" todir="${folderForDataFiles}" overwrite="true"/>
        <if>
            <equals arg1="${noargs}" arg2="true" />
            <then>
                <apexRunTests user="${orguser.login}" password="${orguser.password}" xmlResults="${xml.results}"
                    server="${env.endpoint}"  folderForDataFiles="${folderForDataFilesVal}"/>
            </then>
            <else>
                <apexRunTests user="${orguser.login}" password="${orguser.password}" xmlResults="${xml.results}"
                    server="${env.endpoint}" extraArgs="${withCodeCovExtraFlags}"  folderForDataFiles="${folderForDataFilesVal}"/>
            </else>
        </if>

        <apexCodeCovProcessData dataFileFolderName="${folderForDataFilesVal}" finalResultsFolderName="${finalResultsFileNameVal}"  />
        <if>
            <equals arg1="${deleteDataFiles}" arg2="true" />
            <then>
                <delete dir="${folderForDataFilesVal}"/>
            </then>
        </if>

        <updateXMLFileNameInHtmlFile xmlFileName="${finalCoverageResultsXML}"  htmlFileName="${htmlFileNameVal}"/>

    </target>

    <target name="loadForecastClasses" depends="compileApexLoader" description="Loads Specialist Forecasting Apex Classes into org">
        <apexLoader user="${sfdc.login}" password="${sfdc.password}"
                    directory="${forecastsfdc.cls.dir}" server="${env.endpoint}"
                    manifestdir="${forecast.home}/sfdc" manifest="manifestClasses.txt"/>
    </target>

    <target name="loadForecastTriggers" depends="compileApexLoader" description="Loads Specialist Forecasting Apex Triggers into org">
        <apexLoader user="${sfdc.login}" password="${sfdc.password}"
                    directory="${forecastsfdc.trg.dir}" server="${env.endpoint}"
                    manifestdir="${forecast.home}/src" manifest="manifestTriggers.txt"/>
    </target>

    <target name="loadForecastPages" depends="compileScontrolLoader" description="Loads Specialist Forecasting Apex Pages into org">
        <scontrolLoader user="${sfdc.login}" password="${sfdc.password}"
                        directory="${forecastsfdc.pages.dir}" server="${env.endpoint}"
                        manifestdir="${forecast.home}/src" manifest="manifestPages.txt"/>
    </target>

    <target name="runClassTestWithoutCodeCov">
        <echo message="Running ftest for ${class.name}"/>
        <apexRunTests user="${sfdc.login}" password="${sfdc.password}" xmlResults="${manifestdir}/results/result-${class.name}.xml"
            server="${env.endpoint}" extraArgs="-nc -k ${class.name}" />
    </target>

    <target name="runClassTest" depends="compileApexRunTests, checkResultDirExists, createResultsDir" description="Run ftests for a specific class">
        <if>
            <equals arg1="${codecoverage}" arg2="true" />
            <then>
                <antcall target="runClassTestWithCodeCov"/>
            </then>
            <else>
                <antcall target="runClassTestWithoutCodeCov"/>
            </else>
        </if>
    </target>

    <target name="checkResultDirExists">
        <available file="${manifestdir}/results" type="dir" property="resultdir.present"/>
        <if>
            <equals arg1="resultdir.present" arg2="true" />
            <then>
                <delete file="${manifestdir}/results/*.xml"/>
            </then>
        </if>
    </target>

    <target name="createResultsDir" unless="${resultdir.present}">
        <mkdir dir="${manifestdir}/results"/>
    </target>

    <target name="insertSpecialistForecast">
        <insertCustomObjMacro fileName="SpecialistForecast" entityName="SpecialistForecast"
            username="${current.username}" encPwd="${current.encPwd}" ns="" dataDir="${forecast.data.dir}"
            dataMappingDir="${forecast.data.mapping.dir}"/>
    </target>

    <target name="insertSpecialistForecastLineItem">
        <insertCustomObjMacro fileName="SpecialistForecastLineItem" entityName="SpecialistForecastLineItem"
            username="${current.username}" encPwd="${current.encPwd}" ns="" dataDir="${forecast.data.dir}"
            dataMappingDir="${forecast.data.mapping.dir}"/>
    </target>

    <target name="insertForecastConfigurations">
        <insertCustomObjMacro fileName="ForecastConfigurations" entityName="ForecastConfigurations"
            username="${current.username}" encPwd="${current.encPwd}" ns="" dataDir="${forecast.data.dir}"
            dataMappingDir="${forecast.data.mapping.dir}"/>
    </target>

    <target name="insertForecastHierarchyConfigurations">
        <insertCustomObjMacro fileName="ForecastHierarchyConfigurations" entityName="ForecastHierarchyConfigurations"
            username="${current.username}" encPwd="${current.encPwd}" ns="" dataDir="${forecast.data.dir}"
            dataMappingDir="${forecast.data.mapping.dir}"/>
    </target>

    <target name="insertSpecialistForecastData" depends="getOrgPassword" description="Inserts Specialist Forecast data">
        <antcall target="insertSpecialistForecast">
            <param name="current.username" value="${sfdc.login}"/>
            <param name="current.encPwd" value="${sfdc.password.enc}"/>
        </antcall>
    </target>

    <target name="insertSpecialistForecastLineItemIntoSfdc" depends="getOrgPassword" description="Inserts Specialist Forecast Line Item data">
        <antcall target="insertSpecialistForecastLineItem">
            <param name="current.username" value="${sfdc.login}"/>
            <param name="current.encPwd" value="${sfdc.password.enc}"/>
        </antcall>
    </target>

    <target name="insertForecastConfigurationsIntoSfdc" depends="getOrgPassword" description="Inserts Specialist Forecast Report custom settings data">
        <antcall target="insertForecastConfigurations">
            <param name="current.username" value="${sfdc.login}"/>
            <param name="current.encPwd" value="${sfdc.password.enc}"/>
        </antcall>
    </target>

    <target name="insertForecastHierarchyConfigurationsIntoSfdc" depends="getOrgPassword" description="Inserts specialist forecast hierarchy Role-User Mapping data">
        <antcall target="insertForecastHierarchyConfigurations">
            <param name="current.username" value="${sfdc.login}"/>
            <param name="current.encPwd" value="${sfdc.password.enc}"/>
        </antcall>
    </target>

    <target name="deleteAllSpecialistForecast">
        <deleteAllMacro entityName="SpecialistForecast" username="${current.username}" encPwd="${current.encPwd}" ns="" dataDir="${forecast.data.dir}"
                        dataMappingDir="${forecast.data.mapping.dir}"/>
    </target>

    <target name="deleteAllSpecialistForecastLineItem">
        <deleteAllMacro entityName="SpecialistForecastLineItem" username="${current.username}" encPwd="${current.encPwd}" ns="" dataDir="${forecast.data.dir}"
                        dataMappingDir="${forecast.data.mapping.dir}"/>
    </target>

    <target name="deleteAllForecastConfigurations">
        <deleteAllMacro entityName="ForecastConfigurations" username="${current.username}" encPwd="${current.encPwd}" ns="" dataDir="${forecast.data.dir}"
                        dataMappingDir="${forecast.data.mapping.dir}"/>
    </target>

    <target name="deleteAllForecastHierarchyConfigurations">
        <deleteAllMacro entityName="ForecastHierarchyConfigurations" username="${current.username}" encPwd="${current.encPwd}" ns="" dataDir="${forecast.data.dir}"
                        dataMappingDir="${forecast.data.mapping.dir}"/>
    </target>

    <target name="deleteAllDataFromSpecialistForecasts" depends="getOrgPassword" description="Deletes Specialist Forecast data">
        <antcall target="deleteAllSpecialistForecast">
            <param name="current.username" value="${sfdc.login}"/>
            <param name="current.encPwd" value="${sfdc.password.enc}"/>
        </antcall>
    </target>

    <target name="deleteAllDataFromSpecialistForecastLineItem" depends="getOrgPassword" description="Deletes Specialist Forecast Line Item data">
        <antcall target="deleteAllSpecialistForecastLineItem">
            <param name="current.username" value="${sfdc.login}"/>
            <param name="current.encPwd" value="${sfdc.password.enc}"/>
        </antcall>
    </target>

    <target name="deleteAllDataFromForecastConfigurations" depends="getOrgPassword" description="Deletes Forecast Configurations custom settings data">
        <antcall target="deleteAllForecastConfigurations">
            <param name="current.username" value="${sfdc.login}"/>
            <param name="current.encPwd" value="${sfdc.password.enc}"/>
        </antcall>
    </target>

    <target name="deleteAllDataFromForecastHierarchyConfigurations" depends="getOrgPassword" description="Deletes Forecast Hierarchy Configurations">
        <antcall target="deleteAllForecastHierarchyConfigurations">
            <param name="current.username" value="${sfdc.login}"/>
            <param name="current.encPwd" value="${sfdc.password.enc}"/>
        </antcall>
    </target>

    <target name="extractForecastConfigurations">
        <queryCustomObjMacro entityName="ForecastConfigurations"
            fileName="ForecastConfigurations-extract"
            fields="Name,
            ConfigurationCategory__c,
            ConfigurationValue__c,
            IsActive__c,
            Comment__c"
            username="${current.username}"
            encPwd="${current.encPwd}" ns=""
            dataDir="${forecast.data.dir}"/>
    </target>

    <target name="extractForecastConfigurationsFromOrg" depends="getOrgPassword" description="Extracts Forecast Configuration custom settings data">
        <antcall target="extractForecastConfigurations">
            <param name="current.username" value="${sfdc.login}"/>
            <param name="current.encPwd" value="${sfdc.password.enc}"/>
        </antcall>
    </target>

    <target name="getOrgPassword" unless="sfdc.password.enc">
        <baseEncryptPassword outputProperty="sfdc.password.enc">
            <arg value="-e"/>
            <arg value="${sfdc.password}"/>
        </baseEncryptPassword>
    </target>


</project>
